name: Java CI with Maven, SonarQube, and Docker

on:
  push:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn clean -B package --file pom.xml

#      - name: Run SonarQube
#        run: mvn clean verify sonar:sonar -Dsonar.projectKey=${{secrets.SONAR_KEY}} -Dsonar.projectName=${{secrets.SONAR_NAME}} -Dsonar.host.url=${{secrets.SONAR_HOST}} -Dsonar.token=${{secrets.SONAR_TOKEN}}

      - name : Delete file in server
        run : sudo rm -rf /home/nhnacademy/front

      - name: Copy files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_IP }}
          username: ${{ secrets.SSH_ID }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "."
          target: "/home/nhnacademy/front"

      - name: Deploy to server via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_IP }}
          username: ${{ secrets.SSH_ID }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd /home/nhnacademy/front
            
            chmod +x ./renew_cert.sh
            chmod +x ./setup_cron.sh
            ./setup_cron.sh

            sudo docker stop front1 || true
            sudo docker rm front1 || true
            sudo docker build -t front-image1 .
            sudo docker run -d -p 3000:3000 --name front1 --net front_network front-image1
            
            while [[ "$(sudo docker inspect -f '{{.State.Status}}' front1)" != "running" ]]; do \
              echo "Waiting for container to become healthy..."; \
              sleep 5; \
            done
            
            sudo docker stop front2 || true
            sudo docker rm front2 || true
            sudo docker build -t front-image2 .
            sudo docker run -d -p 3001:3001 --name front2 --net front_network front-image2
            
            sudo docker stop nginx || true
            sudo docker rm nginx || true
            sudo docker run --name nginx -d \
              -p 80:80 -p 443:443 \
              -v ./nginx.conf:/etc/nginx/nginx.conf \
              -v /home/nhnacademy/certbot/conf:/etc/letsencrypt \
              -v /home/nhnacademy/certbot/www:/var/www/certbot \
              --net front_network nginx
